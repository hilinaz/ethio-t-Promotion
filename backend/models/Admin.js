const mongoose = require('mongoose');
const bcrypt = require('bcrypt');

// Define Admin schema
const adminSchema = new mongoose.Schema(
  {
    adminID: { type: Number, required: true, unique: true },
    userName: { type: String, required: true },
    role: { type: String, required: true, enum: ['superadmin', 'admin'] },
    password: { type: String, required: true }, // Add password field
  },
  { _id: false }  // Disable the _id field generated by default
);

// Pre-save hook to hash password before saving
adminSchema.pre('save', async function (next) {
  if (this.isModified('password')) {
    // Hash the password before saving
    this.password = await bcrypt.hash(this.password, 10);
  }
  next();
});



// Create Admin model
const Admin = mongoose.model('Admin', adminSchema);

module.exports = Admin;
